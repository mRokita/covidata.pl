stages:
  - build
  - test
  - release
  - deploy

variables:
  FRONT_TEST_IMAGE: registry.gitlab.com/mrokita/covidata.pl:frontend-$CI_BUILD_REF_NAME
  FRONT_RELEASE_IMAGE: registry.gitlab.com/mrokita/covidata.pl:frontend-latest
  API_TEST_IMAGE: registry.gitlab.com/mrokita/covidata.pl:api-$CI_BUILD_REF_NAME
  API_RELEASE_IMAGE: registry.gitlab.com/mrokita/covidata.pl:api-latest
  CRAWLER_TEST_IMAGE: registry.gitlab.com/mrokita/covidata.pl:crawler-$CI_BUILD_REF_NAME
  CRAWLER_RELEASE_IMAGE: registry.gitlab.com/mrokita/covidata.pl:crawler-latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com

build:
  stage: build
  tags:
    - private-shell
  script:
    - export IMAGE_TAG=$CI_BUILD_REF_NAME
    - docker-compose build
    - docker-compose push
test-api:
  stage: test
  tags:
    - private-shell
  script:
    - docker run $API_TEST_IMAGE sh -c "python -m pytest --cov=. /app/tests/ --cov-report term-missing"
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
release-frontend-image:
  stage: release
  tags:
    - private-shell
  script:
    - docker pull $FRONT_TEST_IMAGE
    - docker tag $FRONT_TEST_IMAGE $API_RELEASE_IMAGE
    - docker push $FRONT_RELEASE_IMAGE
  only:
    - master
release-api-image:
  stage: release
  tags:
    - private-shell
  script:
    - docker pull $API_TEST_IMAGE
    - docker tag $API_TEST_IMAGE $API_RELEASE_IMAGE
    - docker push $API_RELEASE_IMAGE
  only:
    - master
release-crawler-image:
  stage: release
  tags:
    - private-shell
  script:
    - docker pull $CRAWLER_TEST_IMAGE
    - docker tag $CRAWLER_TEST_IMAGE $CRAWLER_RELEASE_IMAGE
    - docker push $CRAWLER_RELEASE_IMAGE
  only:
    - master
deploy:
  stage: deploy
  when: manual
  only:
    - master
  tags:
    - private-shell
  script:
    - export IMAGE_TAG=latest
    - docker stack deploy --compose-file docker-compose.yml --resolve-image=always --with-registry-auth covidata