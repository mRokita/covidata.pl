version: '3.5'
services:
  frontend:
    image: "registry.gitlab.com/mrokita/covidata.pl:frontend-${IMAGE_TAG}"
    build:
      context: frontend/
    labels:
      - "traefik.enable=true"
    deploy:
      labels:
        - "traefik.http.services.covidata-frontend.loadbalancer.server.port=80"
        - "traefik.enable=true"
      replicas: 2
      update_config:
        delay: 10s
        failure_action: rollback
    depends_on:
      - api
    healthcheck:
      test: curl -sS http://127.0.0.1
      interval: 5s
      timeout: 10s
      retries: 3
    networks:
      - default
      - traefik
  api:
    image: "registry.gitlab.com/mrokita/covidata.pl:api-${IMAGE_TAG}"
    build:
      context: api/
    labels:
      - "traefik.enable=true"
    deploy:
      labels:
      - "traefik.http.services.covidata-api.loadbalancer.server.port=80"
      - "traefik.enable=true"
      replicas: 2
      update_config:
        delay: 10s
        failure_action: rollback
    healthcheck:
      test: curl -sS http://127.0.0.1/api/v1/regions
      interval: 5s
      timeout: 10s
      retries: 3
    depends_on:
      - db
      - redis
    networks:
      - default
      - traefik
  redis:
    image: redis:6.0-rc3-alpine3.11
    restart: always
    networks:
      - default
  db:
    image: postgres:12.2-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ***REMOVED***
      POSTGRES_USER: covidata
      POSTGRES_DB: covidata
    networks:
      - default
    volumes:
      - pgdata:/var/lib/postgresql/data
  crawler:
    image: "registry.gitlab.com/mrokita/covidata.pl:crawler-${IMAGE_TAG}"
    build:
      context: crawler/
    networks:
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - api
networks:
  traefik:
    external: true
volumes:
  pgdata:
